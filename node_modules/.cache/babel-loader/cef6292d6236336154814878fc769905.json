{"ast":null,"code":"var _jsxFileName = \"/home/ayush/WebD/React-JS/datanomous/src/components/StockGraph.js\";\nimport React from \"react\";\nimport Highcharts from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\nlet groupingUnits = [[\"week\", // unit name\n[1] // allowed multiples\n], [\"month\", [1, 2, 3, 4, 6]]];\nlet mockOptions = {\n  rangeSelector: {\n    selected: 1\n  },\n  title: {\n    text: \"AAPL Historical\"\n  },\n  yAxis: [{\n    labels: {\n      align: \"right\",\n      x: -3\n    },\n    title: {\n      text: \"OHLC\"\n    },\n    height: \"60%\",\n    lineWidth: 2,\n    resize: {\n      enabled: true\n    }\n  }, {\n    labels: {\n      align: \"right\",\n      x: -3\n    },\n    title: {\n      text: \"Volume\"\n    },\n    top: \"65%\",\n    height: \"35%\",\n    offset: 0,\n    lineWidth: 2\n  }],\n  tooltip: {\n    split: true\n  },\n  series: [{\n    type: \"candlestick\",\n    name: \"AAPL\",\n    data: [],\n    dataGrouping: {\n      units: groupingUnits\n    }\n  }, {\n    type: \"column\",\n    name: \"Volume\",\n    data: [],\n    yAxis: 1,\n    dataGrouping: {\n      units: groupingUnits\n    }\n  }]\n};\n\nconst transformChartData = (options, array) => {\n  const dataLength = array.length;\n\n  for (var i = 0; i < dataLength; i += 1) {\n    options.series[0].data.push([array[i][0], // the date\n    array[i][1], // open\n    array[i][2], // high\n    array[i][3], // low\n    array[i][4] // close\n    ]);\n    options.series[1].data.push([array[i][0], // the date\n    array[i][5] // the volume\n    ]);\n  }\n\n  return options;\n};\n\nconst StockGraph = props => {\n  if (!props.data.open) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 12\n      }\n    }, \"Enter Something\");\n  }\n\n  const options = {\n    title: {\n      text: \"My stock chart\"\n    },\n    series: [{\n      data: props.data.open\n    }]\n  };\n};\n\nexport default StockGraph;","map":{"version":3,"sources":["/home/ayush/WebD/React-JS/datanomous/src/components/StockGraph.js"],"names":["React","Highcharts","HighchartsReact","groupingUnits","mockOptions","rangeSelector","selected","title","text","yAxis","labels","align","x","height","lineWidth","resize","enabled","top","offset","tooltip","split","series","type","name","data","dataGrouping","units","transformChartData","options","array","dataLength","length","i","push","StockGraph","props","open"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Highcharts from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\n\nlet groupingUnits = [\n  [\n    \"week\", // unit name\n    [1], // allowed multiples\n  ],\n  [\"month\", [1, 2, 3, 4, 6]],\n];\n\nlet mockOptions = {\n  rangeSelector: {\n    selected: 1,\n  },\n\n  title: {\n    text: \"AAPL Historical\",\n  },\n\n  yAxis: [\n    {\n      labels: {\n        align: \"right\",\n        x: -3,\n      },\n      title: {\n        text: \"OHLC\",\n      },\n      height: \"60%\",\n      lineWidth: 2,\n      resize: {\n        enabled: true,\n      },\n    },\n    {\n      labels: {\n        align: \"right\",\n        x: -3,\n      },\n      title: {\n        text: \"Volume\",\n      },\n      top: \"65%\",\n      height: \"35%\",\n      offset: 0,\n      lineWidth: 2,\n    },\n  ],\n\n  tooltip: {\n    split: true,\n  },\n\n  series: [\n    {\n      type: \"candlestick\",\n      name: \"AAPL\",\n      data: [],\n      dataGrouping: {\n        units: groupingUnits,\n      },\n    },\n    {\n      type: \"column\",\n      name: \"Volume\",\n      data: [],\n      yAxis: 1,\n      dataGrouping: {\n        units: groupingUnits,\n      },\n    },\n  ],\n};\n\nconst transformChartData = (options, array) => {\n  const dataLength = array.length;\n\n  for (var i = 0; i < dataLength; i += 1) {\n    options.series[0].data.push([\n      array[i][0], // the date\n      array[i][1], // open\n      array[i][2], // high\n      array[i][3], // low\n      array[i][4], // close\n    ]);\n\n    options.series[1].data.push([\n      array[i][0], // the date\n      array[i][5], // the volume\n    ]);\n  }\n  return options;\n};\n\nconst StockGraph = (props) => {\n  if (!props.data.open) {\n    return <div>Enter Something</div>;\n  }\n\n  const options = {\n    title: {\n      text: \"My stock chart\",\n    },\n    series: [\n      {\n        data: props.data.open,\n      },\n    ],\n  };\n};\n\nexport default StockGraph;\n"]},"metadata":{},"sourceType":"module"}