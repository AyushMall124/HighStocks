{"ast":null,"code":"var _jsxFileName = \"/home/ayush/WebD/React-JS/datanomous/src/components/StockGraph.js\";\nimport React from \"react\";\nimport HighStock from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\n\nconst StockGraph = props => {\n  if (props.data.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 12\n      }\n    }, \"Enter Something\");\n  }\n\n  console.log(props.data);\n  let groupingUnits = [[\"week\", // unit name\n  [1] // allowed multiples\n  ], [\"month\", [1, 2, 3, 4, 6]]];\n  let options = {\n    rangeSelector: {\n      selected: 1\n    },\n    title: {\n      text: \"Price Chart\"\n    },\n    yAxis: [{\n      labels: {\n        align: \"right\",\n        x: -3\n      },\n      title: {\n        text: \"OHLC\"\n      },\n      height: \"60%\",\n      lineWidth: 2,\n      resize: {\n        enabled: true\n      }\n    }, {\n      labels: {\n        align: \"right\",\n        x: -3\n      },\n      title: {\n        text: \"Volume\"\n      },\n      top: \"65%\",\n      height: \"35%\",\n      offset: 0,\n      lineWidth: 2\n    }],\n    tooltip: {\n      split: true\n    },\n    series: [{\n      type: \"candlestick\",\n      name: \"AAPL\",\n      data: []\n    }, {\n      type: \"column\",\n      name: \"Volume\",\n      data: [],\n      yAxis: 1\n    }],\n    xAxis: {\n      type: \"datetime\",\n      dateTimeLabelFormats: {\n        day: \"%d %b %Y\" //ex- 01 Jan 2016\n\n      }\n    }\n  };\n  const dataLength = props.data.length;\n\n  for (var i = 0; i < dataLength; i += 1) {\n    options.series[0].data.push([// parseInt(props.data[i][\"Date\"]), // the date\n    parseInt(props.data[i][\"open\"]), // open\n    parseInt(props.data[i][\"high\"]), // high\n    parseInt(props.data[i][\"low\"]), // low\n    parseInt(props.data[i][\"close\"]) // close\n    ]);\n    options.series[1].data.push([// parseInt(props.data[i][\"Date\"]), // the date\n    parseInt(props.data[i][\"volume\"]) // the volume\n    ]);\n  }\n\n  console.log(options);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(HighchartsReact, {\n    highcharts: HighStock,\n    constructorType: \"stockChart\",\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default StockGraph;","map":{"version":3,"sources":["/home/ayush/WebD/React-JS/datanomous/src/components/StockGraph.js"],"names":["React","HighStock","HighchartsReact","StockGraph","props","data","length","console","log","groupingUnits","options","rangeSelector","selected","title","text","yAxis","labels","align","x","height","lineWidth","resize","enabled","top","offset","tooltip","split","series","type","name","xAxis","dateTimeLabelFormats","day","dataLength","i","push","parseInt"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport HighStock from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\n\nconst StockGraph = (props) => {\n  if (props.data.length === 0) {\n    return <div>Enter Something</div>;\n  }\n  console.log(props.data);\n  let groupingUnits = [\n    [\n      \"week\", // unit name\n      [1], // allowed multiples\n    ],\n    [\"month\", [1, 2, 3, 4, 6]],\n  ];\n\n  let options = {\n    rangeSelector: {\n      selected: 1,\n    },\n\n    title: {\n      text: \"Price Chart\",\n    },\n\n    yAxis: [\n      {\n        labels: {\n          align: \"right\",\n          x: -3,\n        },\n        title: {\n          text: \"OHLC\",\n        },\n        height: \"60%\",\n        lineWidth: 2,\n        resize: {\n          enabled: true,\n        },\n      },\n      {\n        labels: {\n          align: \"right\",\n          x: -3,\n        },\n        title: {\n          text: \"Volume\",\n        },\n        top: \"65%\",\n        height: \"35%\",\n        offset: 0,\n        lineWidth: 2,\n      },\n    ],\n\n    tooltip: {\n      split: true,\n    },\n\n    series: [\n      {\n        type: \"candlestick\",\n        name: \"AAPL\",\n        data: [],\n      },\n      {\n        type: \"column\",\n        name: \"Volume\",\n        data: [],\n        yAxis: 1,\n      },\n    ],\n\n    xAxis: {\n      type: \"datetime\",\n      dateTimeLabelFormats: {\n        day: \"%d %b %Y\", //ex- 01 Jan 2016\n      },\n    },\n  };\n  const dataLength = props.data.length;\n  for (var i = 0; i < dataLength; i += 1) {\n    options.series[0].data.push([\n      // parseInt(props.data[i][\"Date\"]), // the date\n      parseInt(props.data[i][\"open\"]), // open\n      parseInt(props.data[i][\"high\"]), // high\n      parseInt(props.data[i][\"low\"]), // low\n      parseInt(props.data[i][\"close\"]), // close\n    ]);\n\n    options.series[1].data.push([\n      // parseInt(props.data[i][\"Date\"]), // the date\n      parseInt(props.data[i][\"volume\"]), // the volume\n    ]);\n  }\n  console.log(options);\n  return (\n    <div className=\"App\">\n      <HighchartsReact\n        highcharts={HighStock}\n        constructorType={\"stockChart\"}\n        options={options}\n      />\n    </div>\n  );\n};\n\nexport default StockGraph;\n"]},"metadata":{},"sourceType":"module"}