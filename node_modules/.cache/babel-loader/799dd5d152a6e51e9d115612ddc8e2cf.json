{"ast":null,"code":"var _jsxFileName = \"/home/ayush/WebD/React-JS/datanomous/src/components/StockGraph.js\";\nimport React from \"react\";\nimport Highcharts from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\n\nconst StockGraph = props => {\n  if (!props.data.open) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 12\n      }\n    }, \"Enter Something\");\n  }\n\n  const options = {\n    title: {\n      text: \"My stock chart\"\n    },\n    series: [{\n      data: props.data.open\n    }]\n  };\n  console.log(props.data.open);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(HighchartsReact, {\n    highcharts: Highcharts,\n    constructorType: \"stockChart\",\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  })));\n  const [data, setData] = useState({\n    options: {}\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      const fetchedData = mockData; // simulate xhr request\n\n      const newOptions = transformChartData(mockOptions, fetchedData);\n      setData({\n        options: newOptions\n      });\n      setIsLoading(false);\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Loading ...\") : /*#__PURE__*/React.createElement(HighchartsReact, {\n    highcharts: HighStock,\n    constructorType: \"stockChart\",\n    options: data.options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default StockGraph;","map":{"version":3,"sources":["/home/ayush/WebD/React-JS/datanomous/src/components/StockGraph.js"],"names":["React","Highcharts","HighchartsReact","StockGraph","props","data","open","options","title","text","series","console","log","setData","useState","isLoading","setIsLoading","useEffect","fetchData","fetchedData","mockData","newOptions","transformChartData","mockOptions","HighStock"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,MAAI,CAACA,KAAK,CAACC,IAAN,CAAWC,IAAhB,EAAsB;AACpB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AACD;;AAED,QAAMC,OAAO,GAAG;AACdC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE;AADD,KADO;AAIdC,IAAAA,MAAM,EAAE,CACN;AACEL,MAAAA,IAAI,EAAED,KAAK,CAACC,IAAN,CAAWC;AADnB,KADM;AAJM,GAAhB;AAUAK,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACC,IAAN,CAAWC,IAAvB;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AACE,IAAA,UAAU,EAAEL,UADd;AAEE,IAAA,eAAe,EAAE,YAFnB;AAGE,IAAA,OAAO,EAAEM,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAYA,QAAM,CAACF,IAAD,EAAOQ,OAAP,IAAkBC,QAAQ,CAAC;AAAEP,IAAAA,OAAO,EAAE;AAAX,GAAD,CAAhC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BF,QAAQ,CAAC,KAAD,CAA1C;AACAG,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMC,SAAS,GAAG,YAAY;AAC5BF,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,YAAMG,WAAW,GAAGC,QAApB,CAF4B,CAEE;;AAC9B,YAAMC,UAAU,GAAGC,kBAAkB,CAACC,WAAD,EAAcJ,WAAd,CAArC;AACAN,MAAAA,OAAO,CAAC;AAAEN,QAAAA,OAAO,EAAEc;AAAX,OAAD,CAAP;AACAL,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAND;;AAOAE,IAAAA,SAAS;AACV,GATQ,EASN,EATM,CAAT;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,SAAS,gBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADQ,gBAGR,oBAAC,eAAD;AACE,IAAA,UAAU,EAAES,SADd;AAEE,IAAA,eAAe,EAAE,YAFnB;AAGE,IAAA,OAAO,EAAEnB,IAAI,CAACE,OAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADF;AAaD,CAtDD;;AAwDA,eAAeJ,UAAf","sourcesContent":["import React from \"react\";\nimport Highcharts from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\n\nconst StockGraph = (props) => {\n  if (!props.data.open) {\n    return <div>Enter Something</div>;\n  }\n\n  const options = {\n    title: {\n      text: \"My stock chart\",\n    },\n    series: [\n      {\n        data: props.data.open,\n      },\n    ],\n  };\n  console.log(props.data.open);\n  return (\n    <div>\n      <div>\n        <HighchartsReact\n          highcharts={Highcharts}\n          constructorType={\"stockChart\"}\n          options={options}\n        />\n      </div>\n    </div>\n  );\n\n  const [data, setData] = useState({ options: {} });\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      const fetchedData = mockData; // simulate xhr request\n      const newOptions = transformChartData(mockOptions, fetchedData);\n      setData({ options: newOptions });\n      setIsLoading(false);\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {isLoading ? (\n        <div>Loading ...</div>\n      ) : (\n        <HighchartsReact\n          highcharts={HighStock}\n          constructorType={\"stockChart\"}\n          options={data.options}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default StockGraph;\n"]},"metadata":{},"sourceType":"module"}