{"ast":null,"code":"var _jsxFileName = \"/home/ayush/WebD/React-JS/datanomous/src/components/StockGraph.js\";\nimport React from \"react\";\nimport Highcharts from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\n\nconst StockGraph = props => {\n  if (!props.data.open) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 12\n      }\n    }, \"Enter Something\");\n  } // const options = {\n  //   title: {\n  //     text: \"My stock chart\",\n  //   },\n  //   series: [\n  //     {\n  //       data: props.data.open,\n  //     },\n  //   ],\n  // };\n\n\n  let groupingUnits = [[\"week\", // unit name\n  [1] // allowed multiples\n  ], [\"month\", [1, 2, 3, 4, 6]]];\n  let mockOptions = {\n    rangeSelector: {\n      selected: 1\n    },\n    title: {\n      text: \"AAPL Historical\"\n    },\n    yAxis: [{\n      labels: {\n        align: \"right\",\n        x: -3\n      },\n      title: {\n        text: \"OHLC\"\n      },\n      height: \"60%\",\n      lineWidth: 2,\n      resize: {\n        enabled: true\n      }\n    }, {\n      labels: {\n        align: \"right\",\n        x: -3\n      },\n      title: {\n        text: \"Volume\"\n      },\n      top: \"65%\",\n      height: \"35%\",\n      offset: 0,\n      lineWidth: 2\n    }],\n    tooltip: {\n      split: true\n    },\n    series: [{\n      type: \"candlestick\",\n      name: \"AAPL\",\n      data: [],\n      dataGrouping: {\n        units: groupingUnits\n      }\n    }, {\n      type: \"column\",\n      name: \"Volume\",\n      data: [],\n      yAxis: 1,\n      dataGrouping: {\n        units: groupingUnits\n      }\n    }]\n  };\n  const newOptions = transformChartData(mockOptions, fetchedData);\n  console.log(props.data.open);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(HighchartsReact, {\n    highcharts: Highcharts,\n    constructorType: \"stockChart\",\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default StockGraph;","map":{"version":3,"sources":["/home/ayush/WebD/React-JS/datanomous/src/components/StockGraph.js"],"names":["React","Highcharts","HighchartsReact","StockGraph","props","data","open","groupingUnits","mockOptions","rangeSelector","selected","title","text","yAxis","labels","align","x","height","lineWidth","resize","enabled","top","offset","tooltip","split","series","type","name","dataGrouping","units","newOptions","transformChartData","fetchedData","console","log","options"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,MAAI,CAACA,KAAK,CAACC,IAAN,CAAWC,IAAhB,EAAsB;AACpB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AACD,GAH2B,CAK5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAIC,aAAa,GAAG,CAClB,CACE,MADF,EACU;AACR,GAAC,CAAD,CAFF,CAEO;AAFP,GADkB,EAKlB,CAAC,OAAD,EAAU,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAV,CALkB,CAApB;AAQA,MAAIC,WAAW,GAAG;AAChBC,IAAAA,aAAa,EAAE;AACbC,MAAAA,QAAQ,EAAE;AADG,KADC;AAKhBC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE;AADD,KALS;AAShBC,IAAAA,KAAK,EAAE,CACL;AACEC,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE,OADD;AAENC,QAAAA,CAAC,EAAE,CAAC;AAFE,OADV;AAKEL,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAE;AADD,OALT;AAQEK,MAAAA,MAAM,EAAE,KARV;AASEC,MAAAA,SAAS,EAAE,CATb;AAUEC,MAAAA,MAAM,EAAE;AACNC,QAAAA,OAAO,EAAE;AADH;AAVV,KADK,EAeL;AACEN,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE,OADD;AAENC,QAAAA,CAAC,EAAE,CAAC;AAFE,OADV;AAKEL,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAE;AADD,OALT;AAQES,MAAAA,GAAG,EAAE,KARP;AASEJ,MAAAA,MAAM,EAAE,KATV;AAUEK,MAAAA,MAAM,EAAE,CAVV;AAWEJ,MAAAA,SAAS,EAAE;AAXb,KAfK,CATS;AAuChBK,IAAAA,OAAO,EAAE;AACPC,MAAAA,KAAK,EAAE;AADA,KAvCO;AA2ChBC,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,IAAI,EAAE,aADR;AAEEC,MAAAA,IAAI,EAAE,MAFR;AAGEtB,MAAAA,IAAI,EAAE,EAHR;AAIEuB,MAAAA,YAAY,EAAE;AACZC,QAAAA,KAAK,EAAEtB;AADK;AAJhB,KADM,EASN;AACEmB,MAAAA,IAAI,EAAE,QADR;AAEEC,MAAAA,IAAI,EAAE,QAFR;AAGEtB,MAAAA,IAAI,EAAE,EAHR;AAIEQ,MAAAA,KAAK,EAAE,CAJT;AAKEe,MAAAA,YAAY,EAAE;AACZC,QAAAA,KAAK,EAAEtB;AADK;AALhB,KATM;AA3CQ,GAAlB;AA+DA,QAAMuB,UAAU,GAAGC,kBAAkB,CAACvB,WAAD,EAAcwB,WAAd,CAArC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY9B,KAAK,CAACC,IAAN,CAAWC,IAAvB;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AACE,IAAA,UAAU,EAAEL,UADd;AAEE,IAAA,eAAe,EAAE,YAFnB;AAGE,IAAA,OAAO,EAAEkC,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAWD,CApGD;;AAsGA,eAAehC,UAAf","sourcesContent":["import React from \"react\";\nimport Highcharts from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\n\nconst StockGraph = (props) => {\n  if (!props.data.open) {\n    return <div>Enter Something</div>;\n  }\n\n  // const options = {\n  //   title: {\n  //     text: \"My stock chart\",\n  //   },\n  //   series: [\n  //     {\n  //       data: props.data.open,\n  //     },\n  //   ],\n  // };\n\n  let groupingUnits = [\n    [\n      \"week\", // unit name\n      [1], // allowed multiples\n    ],\n    [\"month\", [1, 2, 3, 4, 6]],\n  ];\n\n  let mockOptions = {\n    rangeSelector: {\n      selected: 1,\n    },\n\n    title: {\n      text: \"AAPL Historical\",\n    },\n\n    yAxis: [\n      {\n        labels: {\n          align: \"right\",\n          x: -3,\n        },\n        title: {\n          text: \"OHLC\",\n        },\n        height: \"60%\",\n        lineWidth: 2,\n        resize: {\n          enabled: true,\n        },\n      },\n      {\n        labels: {\n          align: \"right\",\n          x: -3,\n        },\n        title: {\n          text: \"Volume\",\n        },\n        top: \"65%\",\n        height: \"35%\",\n        offset: 0,\n        lineWidth: 2,\n      },\n    ],\n\n    tooltip: {\n      split: true,\n    },\n\n    series: [\n      {\n        type: \"candlestick\",\n        name: \"AAPL\",\n        data: [],\n        dataGrouping: {\n          units: groupingUnits,\n        },\n      },\n      {\n        type: \"column\",\n        name: \"Volume\",\n        data: [],\n        yAxis: 1,\n        dataGrouping: {\n          units: groupingUnits,\n        },\n      },\n    ],\n  };\n  const newOptions = transformChartData(mockOptions, fetchedData);\n  console.log(props.data.open);\n  return (\n    <div>\n      <div>\n        <HighchartsReact\n          highcharts={Highcharts}\n          constructorType={\"stockChart\"}\n          options={options}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default StockGraph;\n"]},"metadata":{},"sourceType":"module"}